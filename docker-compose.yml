services:
  petcare-db:
    image: mysql:8.0
    container_name: petcare-db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    # Porta do host configur√°vel via .env: DB_HOST_PORT (default 3307)
    ports:
      - "${DB_HOST_PORT:-3307}:3306"
    # Permite auth nativa e, opcionalmente, desativa sql_mode estrito via MYSQL_SQL_MODE
    command: ["sh", "-c", "exec mysqld --default-authentication-plugin=mysql_native_password --sql-mode='${MYSQL_SQL_MODE:-}'"]
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -p$${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 10s
      timeout: 5s
      retries: 12
    networks:
      - petcare-net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: petcare-backend
    restart: unless-stopped
    depends_on:
      petcare-db:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://petcare-db:3306/${MYSQL_DATABASE}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SERVER_PORT=8080
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "8080:8080"
    networks:
      - petcare-net

  # ---- FRONTEND DEV (Vite hot-reload) ----
  frontend-dev:
    profiles: ["dev"]
    build:
      context: ./frontend
      target: dev
    container_name: petcare-frontend-dev
    restart: unless-stopped
    command: npm run dev -- --host
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - petcare-net

  # ---- FRONTEND PROD (Nginx servindo build) ----
  frontend:
    profiles: ["prod"]
    build:
      context: ./frontend
      target: prod
    container_name: petcare-frontend
    restart: unless-stopped
    ports:
      - "5173:80"   # http://localhost:5173
    depends_on:
      - backend
    networks:
      - petcare-net

volumes:
  db_data:
  frontend_node_modules:

networks:
  petcare-net:
    driver: bridge
